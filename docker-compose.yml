version: "3"

services:
  # in a deployment, the freeswitch exe and the api need to be co-located. We fake that
  # here by giving the required volumes to both containers
  # freeswitch deposits in /opt/freeswitch/store
  # the api deposits in /tmp


  freeswitch-exe:
    # build:
    #   context: ./
    #   dockerfile: Dockerfile.freeswitch-exe
    build:
      context: ./
      dockerfile: Dockerfile.additional.modules
    # image: drachtio/drachtio-freeswitch-mrf:latest
    #image: drachtio/drachtio-freeswitch-mrf
    # image: drachtio/drachtio-freeswitch-mrf:v1.10.1-full
    #image: drachtio/freeswitch-grpc
    environment:
       - AWS_BUCKET=freeswitch-store-test
       - AWS_REGION=ap-southeast-2
       - AWS_ACCESS_ID=
       - AWS_SECRET_KEY= 
       - FREESWITCH_PUBLIC_IP=192.168.44.67
       - DOMAIN=192.168.44.67
       - FINN=http://192.168.44.67:3001
       - FREESWITCH=http://192.168.44.67:3000
       - AIDA=http://192.168.44.67:8085
       - AFFINITY=Freeswitch
       - GOOGLE_APPLICATION_CREDENTIALS=/usr/local/freeswitch/freeswitch-api-7867f30c80d7.json
       - PATH=/usr/local/freeswitch/bin:$PATH
       - MOD_AAI_TRANSCRIPTION_TOKEN=
       - MOD_AUDIO_AAI_BUFFER_SECS=2
       - MOD_AAI_TRANSCRIPTION_FRAME_SIZE=10
       - MOD_AAI_TRANSCRIPTION_SERVICE_THREADS=2
    ports:
      - "5060:5060"
      - "5061:5061"
      - "5060:5060/udp"
      - "5061:5061/udp"
      - "6065:6065"
      - "6066:6066"
      - "6065:6065/udp"
      - "6066:6066/udp"
      - "5080:5080"
      - "5081:5081"
      - "5080:5080/udp"
      - "5081:5081/udp"
      - "6060:6060"
      - "6061:6061"
      - "6060:6060/udp"
      - "6061:6061/udp"
      - "16384-16394:16384-16394/udp"
      - "8080:8080"
    volumes:
      # # - ./vr_config/conf:/opt/freeswitch/conf
      # # - ./vr_config/db:/opt/freeswitch/db
      # # - ./vr_config/log:/opt/freeswitch/log
      # # - ./vr_config/scripts:/opt/freeswitch/scripts
      # # - ./vr_config/store:/opt/freeswitch/store
      # # The following only if the image is used
      # - ./freeswitch_configuration/add-mod/mod_voicemail.so:/usr/local/freeswitch/mod/mod_voicemail.so
      # - ./freeswitch_configuration/add-mod/mod_xml_curl.so:/usr/local/freeswitch/mod/mod_xml_curl.so
      # - ./freeswitch_configuration/add-mod/mod_voicemail_ivr.so:/usr/local/freeswitch/mod/mod_voicemail_ivr.so
      # - ./freeswitch_configuration/add-mod/mod_lua.so:/usr/local/freeswitch/mod/mod_lua.so
      # - ./freeswitch_configuration/add-mod/mod_hash.so:/usr/local/freeswitch/mod/mod_hash.so
      # - ./freeswitch_configuration/add-mod/mod_curl.so:/usr/local/freeswitch/mod/mod_curl.so
      # - ./freeswitch_configuration/add-mod/mod_xml_rpc.so:/usr/local/freeswitch/mod/mod_xml_rpc.so
      # - ./freeswitch_configuration/add-mod/mod_loopback.so:/usr/local/freeswitch/mod/mod_loopback.so
      # - ./freeswitch_configuration/add-mod/mod_db.so:/usr/local/freeswitch/mod/mod_db.so

      # # These are standard configuration files; keep them for all different configuration
      - ./freeswitch_configuration/conf:/usr/local/freeswitch/conf
      - ./freeswitch_configuration/scripts:/usr/local/freeswitch/scripts
      - ./freeswitch_configuration/sounds/Blip.wav:/usr/local/freeswitch/sounds/Blip.wav
      - ./freeswitch_configuration/freeswitch-api-7867f30c80d7.json:/usr/local/freeswitch/freeswitch-api-7867f30c80d7.json

    command: /usr/local/freeswitch/bin/freeswitch -nonat -conf /usr/local/freeswitch/conf -log /usr/local/freeswitch/log -db /usr/local/freeswitch/db -scripts /usr/local/freeswitch/scripts -storage /usr/local/freeswitch/store

#   rabbitmq:
#     image: rabbitmq:management
#     command: rabbitmq-server
#     ports:
#       - "5672:5672"
#       - "15672:15672"
#     healthcheck:
#       test: rabbitmqctl eval '{ true, rabbit_app_booted_and_running } = { rabbit:is_booted(node()), rabbit_app_booted_and_running }, { [], no_alarms } = { rabbit:alarms(), no_alarms }, [] /= rabbit_networking:active_listeners(), rabbitmq_node_is_healthy.' || exit 1
#       interval: 30s
#       timeout: 10s
#       retries: 3

#   web:
# #    <<: *freeswitch-defaults
#     image: 003972348704.dkr.ecr.us-west-1.amazonaws.com/test-freeswitch-api:latest
# #    command: rails s -b 0.0.0.0
#     command: vendor/wait-for-it.sh -t 0 192.168.33.162:5672 -- bash -c "rm -f tmp/pids/server.pid && rails s -b 0.0.0.0"
#     depends_on:
#       - cassandra
#       - rabbitmq
#     ports:
#       - "3000:3000" # api

#   freeswitch_sneakers:
# #    <<: *freeswitch-defaults
#     image: 003972348704.dkr.ecr.us-west-1.amazonaws.com/test-freeswitch-api:latest
# #    <<: *sneakers-command
#     command: vendor/wait-for-it.sh -t 192.168.33.162:5672 -- bundle exec rails sneakers:run
#     command: bundle exec rails sneakers:run

#   cassandra:
#     image: cassandra:3.11.3
#     ports:
#       - "9042:9042"
#     environment:
#       - "MAX_HEAP_SIZE=256M"
#       - "HEAP_NEWSIZE=128M"
#     restart: always
#     volumes:
#       - ../cassandra/cassandra_data:/var/lib/cassandra
#     healthcheck:
#       test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces"]
#       interval: 15s
#       timeout: 10s
#       retries: 10


#   app:
# #    image: 003972348704.dkr.ecr.us-west-1.amazonaws.com/aida-docker:latest
#     image: 003972348704.dkr.ecr.us-west-1.amazonaws.com/aida-docker@sha256:4123379a3d9c8a40ce947c1ca1882a052cf88f98048813801bf758d868883c9c
# #    build:
# #      context: .
#     environment:
#       LOG_LEVEL: ${LOG_LEVEL:-debug}
#     ports:
#       - '8085:8085'
#     # user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
#     command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8085"]

